const { chromium } = require('playwright');

async function testPlaneWordsGame() {
    const browser = await chromium.launch({ headless: false, slowMo: 1000 });
    const context = await browser.newContext({
        viewport: { width: 375, height: 667 } // iPhone 6/7/8 size
    });
    const page = await context.newPage();
    
    const testResults = [];
    let errors = [];
    
    console.log('üöÄ ÂºÄÂßãÊµãËØïÈ£ûÊú∫Â∞ÑÂáªÂçïËØçÊ∏∏Êàè...\n');
    
    // ÁõëÂê¨ÊéßÂà∂Âè∞ÈîôËØØ
    page.on('console', msg => {
        if (msg.type() === 'error') {
            errors.push(msg.text());
            console.log('‚ùå ÊéßÂà∂Âè∞ÈîôËØØ:', msg.text());
        }
    });
    
    try {
        // 1. ÂØºËà™Âà∞Ê∏∏ÊàèÈ°µÈù¢
        console.log('1Ô∏è‚É£ ÊµãËØïÊ∏∏ÊàèÈ¶ñÈ°µ...');
        const filePath = 'file://' + __dirname.replace(/\\/g, '/') + '/index.html';
        console.log(`   ‰ΩøÁî®Êñá‰ª∂Ë∑ØÂæÑ: ${filePath}`);
        await page.goto(filePath, { waitUntil: 'networkidle' });
        await page.waitForTimeout(2000);
        
        // Ê£ÄÊü•È°µÈù¢Ê†áÈ¢ò
        const title = await page.title();
        console.log(`   ‚úÖ È°µÈù¢Ê†áÈ¢ò: ${title}`);
        testResults.push({ test: 'È°µÈù¢Âä†ËΩΩ', status: 'ÈÄöËøá', detail: `Ê†áÈ¢ò: ${title}` });
        
        // 2. ÊµãËØïÈöæÂ∫¶ÈÄâÊã©‰∏ãÊãâËèúÂçï
        console.log('\n2Ô∏è‚É£ ÊµãËØïÈöæÂ∫¶ÈÄâÊã©‰∏ãÊãâËèúÂçï...');
        const gradeSelect = await page.locator('#gradeSelect').count();
        if (gradeSelect > 0) {
            console.log('   ‚úÖ ÈöæÂ∫¶ÈÄâÊã©‰∏ãÊãâËèúÂçïÂ≠òÂú®');
            
            // Ê£ÄÊü•ÈÄâÈ°π
            const options = await page.locator('#gradeSelect option').count();
            console.log(`   ‚úÖ ‰∏ãÊãâËèúÂçïÈÄâÈ°πÊï∞Èáè: ${options}`);
            
            // Â∞ùËØïÈÄâÊã©‰∏çÂêåÈöæÂ∫¶
            await page.selectOption('#gradeSelect', '3');
            await page.waitForTimeout(500);
            const selectedValue = await page.locator('#gradeSelect').inputValue();
            console.log(`   ‚úÖ ÈÄâÊã©ÈöæÂ∫¶ÊµãËØïÈÄöËøáÔºåÂΩìÂâçÂÄº: ${selectedValue}`);
            testResults.push({ test: 'ÈöæÂ∫¶ÈÄâÊã©‰∏ãÊãâËèúÂçï', status: 'ÈÄöËøá', detail: `${options}‰∏™ÈÄâÈ°πÔºåÊµãËØïÈÄâÊã©ÂäüËÉΩÊ≠£Â∏∏` });
        } else {
            console.log('   ‚ùå ÈöæÂ∫¶ÈÄâÊã©‰∏ãÊãâËèúÂçï‰∏çÂ≠òÂú®');
            testResults.push({ test: 'ÈöæÂ∫¶ÈÄâÊã©‰∏ãÊãâËèúÂçï', status: 'Â§±Ë¥•', detail: 'ÂÖÉÁ¥†‰∏çÂ≠òÂú®' });
        }
        
        // 3. ÊµãËØïÂçïËØçÊú¨ÊåâÈíÆ
        console.log('\n3Ô∏è‚É£ ÊµãËØïÂçïËØçÊú¨ÊåâÈíÆ...');
        const vocabButton = await page.locator('button:has-text("ÂçïËØçÊú¨")').count();
        if (vocabButton > 0) {
            await page.click('button:has-text("ÂçïËØçÊú¨")');
            await page.waitForTimeout(1000);
            
            // Ê£ÄÊü•ÊòØÂê¶ÂºπÂá∫ÂçïËØçÂàóË°®
            const modal = await page.locator('.modal').count();
            if (modal > 0) {
                console.log('   ‚úÖ ÂçïËØçÊú¨ÂºπÁ™óÊâìÂºÄÊàêÂäü');
                
                // Ê£ÄÊü•ÂçïËØçÂàóË°®ÂÜÖÂÆπ
                const wordItems = await page.locator('.word-item').count();
                console.log(`   ‚úÖ ÂçïËØçÊï∞Èáè: ${wordItems}`);
                
                // ÂÖ≥Èó≠ÂºπÁ™ó
                await page.click('.close-btn');
                await page.waitForTimeout(500);
                testResults.push({ test: 'ÂçïËØçÊú¨ÊåâÈíÆ', status: 'ÈÄöËøá', detail: `ÊòæÁ§∫${wordItems}‰∏™ÂçïËØç` });
            } else {
                console.log('   ‚ùå ÂçïËØçÊú¨ÂºπÁ™óÊú™ÊâìÂºÄ');
                testResults.push({ test: 'ÂçïËØçÊú¨ÊåâÈíÆ', status: 'Â§±Ë¥•', detail: 'ÂºπÁ™óÊú™ÊâìÂºÄ' });
            }
        } else {
            console.log('   ‚ùå ÂçïËØçÊú¨ÊåâÈíÆ‰∏çÂ≠òÂú®');
            testResults.push({ test: 'ÂçïËØçÊú¨ÊåâÈíÆ', status: 'Â§±Ë¥•', detail: 'ÊåâÈíÆ‰∏çÂ≠òÂú®' });
        }
        
        // 4. ÊµãËØïÊ∏∏ÊàèËØ¥ÊòéÊåâÈíÆ
        console.log('\n4Ô∏è‚É£ ÊµãËØïÊ∏∏ÊàèËØ¥ÊòéÊåâÈíÆ...');
        const helpButton = await page.locator('button:has-text("Ê∏∏ÊàèËØ¥Êòé")').count();
        if (helpButton > 0) {
            await page.click('button:has-text("Ê∏∏ÊàèËØ¥Êòé")');
            await page.waitForTimeout(1000);
            
            // Ê£ÄÊü•ÂºπÁ™óÂÆΩÂ∫¶
            const helpModal = await page.locator('.modal').first();
            const modalExists = await helpModal.count();
            if (modalExists > 0) {
                const modalWidth = await helpModal.evaluate(el => getComputedStyle(el).width);
                console.log(`   ‚úÖ Ê∏∏ÊàèËØ¥ÊòéÂºπÁ™óÊâìÂºÄÔºåÂÆΩÂ∫¶: ${modalWidth}`);
                
                // Ê£ÄÊü•ÊòØÂê¶‰∏∫450pxÂÆΩÂ∫¶
                if (modalWidth === '450px') {
                    console.log('   ‚úÖ ÂºπÁ™óÂÆΩÂ∫¶Á¨¶ÂêàË¶ÅÊ±Ç (450px)');
                    testResults.push({ test: 'Ê∏∏ÊàèËØ¥ÊòéÊåâÈíÆ', status: 'ÈÄöËøá', detail: `ÂÆΩÂ∫¶: ${modalWidth}` });
                } else {
                    console.log(`   ‚ö†Ô∏è ÂºπÁ™óÂÆΩÂ∫¶‰∏çÁ¨¶ÂêàË¶ÅÊ±ÇÔºåÊúüÊúõ450pxÔºåÂÆûÈôÖ: ${modalWidth}`);
                    testResults.push({ test: 'Ê∏∏ÊàèËØ¥ÊòéÊåâÈíÆ', status: 'ÈÉ®ÂàÜÈÄöËøá', detail: `ÂÆΩÂ∫¶: ${modalWidth}ÔºåÊúüÊúõ450px` });
                }
                
                // ÂÖ≥Èó≠ÂºπÁ™ó
                await page.click('.close-btn');
                await page.waitForTimeout(500);
            } else {
                console.log('   ‚ùå Ê∏∏ÊàèËØ¥ÊòéÂºπÁ™óÊú™ÊâìÂºÄ');
                testResults.push({ test: 'Ê∏∏ÊàèËØ¥ÊòéÊåâÈíÆ', status: 'Â§±Ë¥•', detail: 'ÂºπÁ™óÊú™ÊâìÂºÄ' });
            }
        } else {
            console.log('   ‚ùå Ê∏∏ÊàèËØ¥ÊòéÊåâÈíÆ‰∏çÂ≠òÂú®');
            testResults.push({ test: 'Ê∏∏ÊàèËØ¥ÊòéÊåâÈíÆ', status: 'Â§±Ë¥•', detail: 'ÊåâÈíÆ‰∏çÂ≠òÂú®' });
        }
        
        // 5. ÊµãËØïÂºÄÂßãÊ∏∏ÊàèÊåâÈíÆ
        console.log('\n5Ô∏è‚É£ ÊµãËØïÂºÄÂßãÊ∏∏ÊàèÂäüËÉΩ...');
        const startButton = await page.locator('#startGameBtn').count();
        if (startButton > 0) {
            // ‰ΩøÁî®Âº∫Âà∂ÁÇπÂáªÈÅøÂÖçË¢´ÈÅÆÊå°
            await page.locator('#startGameBtn').click({ force: true });
            await page.waitForTimeout(3000);
            
            // Ê£ÄÊü•ÊòØÂê¶ËøõÂÖ•Ê∏∏ÊàèÁïåÈù¢
            const gameCanvas = await page.locator('#gameCanvas').count();
            const gameUI = await page.locator('.game-ui').count();
            
            if (gameCanvas > 0 || gameUI > 0) {
                console.log('   ‚úÖ ÊàêÂäüËøõÂÖ•Ê∏∏ÊàèÁïåÈù¢');
                testResults.push({ test: 'ÂºÄÂßãÊ∏∏ÊàèÊåâÈíÆ', status: 'ÈÄöËøá', detail: 'ÊàêÂäüËøõÂÖ•Ê∏∏ÊàèÁïåÈù¢' });
                
                // 6. ÊµãËØïÊ∏∏ÊàèÁïåÈù¢ÂÖÉÁ¥†
                console.log('\n6Ô∏è‚É£ ÊµãËØïÊ∏∏ÊàèÁïåÈù¢ÂÖÉÁ¥†...');
                
                // Ê£ÄÊü•ËøîÂõûÊåâÈíÆ
                const backButton = await page.locator('button:has-text("‚Üê")').count();
                console.log(`   ${backButton > 0 ? '‚úÖ' : '‚ùå'} ËøîÂõûÊåâÈíÆ: ${backButton > 0 ? 'Â≠òÂú®' : '‰∏çÂ≠òÂú®'}`);
                
                // Ê£ÄÊü•ÊöÇÂÅúÊåâÈíÆ‰ΩçÁΩÆ
                const pauseButton = await page.locator('.pause-btn').count();
                if (pauseButton > 0) {
                    const pausePos = await page.locator('.pause-btn').boundingBox();
                    console.log(`   ‚úÖ ÊöÇÂÅúÊåâÈíÆÂ≠òÂú®Ôºå‰ΩçÁΩÆ: (${Math.round(pausePos.x)}, ${Math.round(pausePos.y)})`);
                } else {
                    console.log('   ‚ùå ÊöÇÂÅúÊåâÈíÆ‰∏çÂ≠òÂú®');
                }
                
                // Ê£ÄÊü•ËôöÊãüÊëáÊùÜ
                const joystick = await page.locator('.joystick-container').count();
                if (joystick > 0) {
                    const joystickPos = await page.locator('.joystick-container').boundingBox();
                    console.log(`   ‚úÖ ËôöÊãüÊëáÊùÜÂ≠òÂú®Ôºå‰ΩçÁΩÆ: (${Math.round(joystickPos.x)}, ${Math.round(joystickPos.y)})`);
                } else {
                    console.log('   ‚ùå ËôöÊãüÊëáÊùÜ‰∏çÂ≠òÂú®');
                }
                
                // Ê£ÄÊü•Â∞ÑÂáªÊåâÈíÆ
                const shootButton = await page.locator('.shoot-btn').count();
                if (shootButton > 0) {
                    const shootPos = await page.locator('.shoot-btn').boundingBox();
                    console.log(`   ‚úÖ Â∞ÑÂáªÊåâÈíÆÂ≠òÂú®Ôºå‰ΩçÁΩÆ: (${Math.round(shootPos.x)}, ${Math.round(shootPos.y)})`);
                } else {
                    console.log('   ‚ùå Â∞ÑÂáªÊåâÈíÆ‰∏çÂ≠òÂú®');
                }
                
                // Ê£ÄÊü•Ë°ÄÊßΩ
                const healthBar = await page.locator('.health-container').count();
                if (healthBar > 0) {
                    const healthItems = await page.locator('.health-item').count();
                    console.log(`   ‚úÖ Ë°ÄÊßΩÂ≠òÂú®ÔºåÊ†ºÊï∞: ${healthItems}`);
                } else {
                    console.log('   ‚ùå Ë°ÄÊßΩ‰∏çÂ≠òÂú®');
                }
                
                // Ê£ÄÊü•ÁõÆÊ†áÂçïËØçÊòæÁ§∫
                const targetWord = await page.locator('.target-word').count();
                if (targetWord > 0) {
                    const wordText = await page.locator('.target-word').textContent();
                    console.log(`   ‚úÖ ÁõÆÊ†áÂçïËØçÊòæÁ§∫: ${wordText}`);
                } else {
                    console.log('   ‚ùå ÁõÆÊ†áÂçïËØçÊòæÁ§∫‰∏çÂ≠òÂú®');
                }
                
                // Ê£ÄÊü•ËÉåÊôØÈü≥‰πê
                const audioElements = await page.locator('audio').count();
                console.log(`   ${audioElements > 0 ? '‚úÖ' : '‚ùå'} Èü≥È¢ëÂÖÉÁ¥†Êï∞Èáè: ${audioElements}`);
                
                testResults.push({ 
                    test: 'Ê∏∏ÊàèÁïåÈù¢ÂÖÉÁ¥†', 
                    status: 'ÈÄöËøá', 
                    detail: `ËøîÂõûÊåâÈíÆ:${backButton>0?'‚úÖ':'‚ùå'}, ÊöÇÂÅúÊåâÈíÆ:${pauseButton>0?'‚úÖ':'‚ùå'}, ÊëáÊùÜ:${joystick>0?'‚úÖ':'‚ùå'}, Â∞ÑÂáªÊåâÈíÆ:${shootButton>0?'‚úÖ':'‚ùå'}, Ë°ÄÊßΩ:${healthBar>0?'‚úÖ':'‚ùå'}` 
                });
                
                // 7. ÊµãËØïÊ∏∏ÊàèÂäüËÉΩ
                console.log('\n7Ô∏è‚É£ ÊµãËØïÊ∏∏ÊàèÂäüËÉΩ...');
                
                // ÊµãËØïÊöÇÂÅúÂäüËÉΩ
                if (pauseButton > 0) {
                    await page.click('.pause-btn');
                    await page.waitForTimeout(1000);
                    console.log('   ‚úÖ ÊöÇÂÅúÊåâÈíÆÁÇπÂáªÊµãËØïÂÆåÊàê');
                    
                    // ÁªßÁª≠Ê∏∏Êàè
                    await page.click('.pause-btn');
                    await page.waitForTimeout(1000);
                }
                
                // ÊµãËØïËøîÂõû‰∏ªËèúÂçï
                if (backButton > 0) {
                    await page.locator('button:has-text("‚Üê")').click({ force: true });
                    await page.waitForTimeout(2000);
                    
                    // Ê£ÄÊü•ÊòØÂê¶ËøîÂõûÂà∞‰∏ªËèúÂçï
                    const backToMain = await page.locator('button:has-text("ÂºÄÂßãÊ∏∏Êàè")').count();
                    if (backToMain > 0) {
                        console.log('   ‚úÖ ËøîÂõû‰∏ªËèúÂçïÂäüËÉΩÊ≠£Â∏∏');
                        testResults.push({ test: 'ËøîÂõû‰∏ªËèúÂçï', status: 'ÈÄöËøá', detail: 'ÊàêÂäüËøîÂõû‰∏ªËèúÂçï' });
                    } else {
                        console.log('   ‚ùå ËøîÂõû‰∏ªËèúÂçïÂäüËÉΩÂºÇÂ∏∏');
                        testResults.push({ test: 'ËøîÂõû‰∏ªËèúÂçï', status: 'Â§±Ë¥•', detail: 'Êú™ËÉΩËøîÂõû‰∏ªËèúÂçï' });
                    }
                }
                
            } else {
                console.log('   ‚ùå Êú™ËÉΩËøõÂÖ•Ê∏∏ÊàèÁïåÈù¢');
                testResults.push({ test: 'ÂºÄÂßãÊ∏∏ÊàèÊåâÈíÆ', status: 'Â§±Ë¥•', detail: 'Êú™ËÉΩËøõÂÖ•Ê∏∏ÊàèÁïåÈù¢' });
            }
        } else {
            console.log('   ‚ùå ÂºÄÂßãÊ∏∏ÊàèÊåâÈíÆ‰∏çÂ≠òÂú®');
            testResults.push({ test: 'ÂºÄÂßãÊ∏∏ÊàèÊåâÈíÆ', status: 'Â§±Ë¥•', detail: 'ÊåâÈíÆ‰∏çÂ≠òÂú®' });
        }
        
        // 8. Ê£ÄÊü•ÁâπÂÆöÈîôËØØ
        console.log('\n8Ô∏è‚É£ Ê£ÄÊü•ÁâπÂÆöÈîôËØØ...');
        const gradeOneWordErrors = errors.filter(error => error.includes('gradeOneWords'));
        if (gradeOneWordErrors.length === 0) {
            console.log('   ‚úÖ Êú™ÂèëÁé∞gradeOneWordsÁõ∏ÂÖ≥ÈîôËØØ');
            testResults.push({ test: 'gradeOneWordsÈîôËØØÊ£ÄÊü•', status: 'ÈÄöËøá', detail: 'Êú™ÂèëÁé∞Áõ∏ÂÖ≥ÈîôËØØ' });
        } else {
            console.log('   ‚ùå ÂèëÁé∞gradeOneWordsÁõ∏ÂÖ≥ÈîôËØØ:');
            gradeOneWordErrors.forEach(error => console.log(`      - ${error}`));
            testResults.push({ test: 'gradeOneWordsÈîôËØØÊ£ÄÊü•', status: 'Â§±Ë¥•', detail: gradeOneWordErrors.join('; ') });
        }
        
    } catch (error) {
        console.log('‚ùå ÊµãËØïËøáÁ®ã‰∏≠ÂèëÁîüÈîôËØØ:', error.message);
        testResults.push({ test: 'Êï¥‰ΩìÊµãËØï', status: 'Â§±Ë¥•', detail: error.message });
    }
    
    // 9. ÁîüÊàêÊµãËØïÊä•Âëä
    console.log('\nüìä ÊµãËØïÁªìÊûúÊ±áÊÄª:');
    console.log('='.repeat(60));
    
    let passCount = 0;
    let failCount = 0;
    let partialCount = 0;
    
    testResults.forEach(result => {
        const status = result.status === 'ÈÄöËøá' ? '‚úÖ' : result.status === 'ÈÉ®ÂàÜÈÄöËøá' ? '‚ö†Ô∏è' : '‚ùå';
        console.log(`${status} ${result.test}: ${result.detail}`);
        
        if (result.status === 'ÈÄöËøá') passCount++;
        else if (result.status === 'Â§±Ë¥•') failCount++;
        else partialCount++;
    });
    
    console.log('\nüìà ÁªüËÆ°‰ø°ÊÅØ:');
    console.log(`   ÈÄöËøá: ${passCount} È°π`);
    console.log(`   Â§±Ë¥•: ${failCount} È°π`);
    console.log(`   ÈÉ®ÂàÜÈÄöËøá: ${partialCount} È°π`);
    console.log(`   ÊÄªËÆ°: ${testResults.length} È°π`);
    
    if (errors.length > 0) {
        console.log('\nüêõ ÊéßÂà∂Âè∞ÈîôËØØÂàóË°®:');
        errors.forEach((error, index) => {
            console.log(`   ${index + 1}. ${error}`);
        });
    } else {
        console.log('\nüéâ Êú™ÂèëÁé∞ÊéßÂà∂Âè∞ÈîôËØØ');
    }
    
    await browser.close();
    
    return {
        results: testResults,
        errors: errors,
        summary: {
            pass: passCount,
            fail: failCount,
            partial: partialCount,
            total: testResults.length
        }
    };
}

// ËøêË°åÊµãËØï
if (require.main === module) {
    testPlaneWordsGame().then(report => {
        console.log('\nüèÅ ÊµãËØïÂÆåÊàê!');
        process.exit(report.summary.fail > 0 ? 1 : 0);
    }).catch(error => {
        console.error('‚ùå ÊµãËØïËøêË°åÂ§±Ë¥•:', error);
        process.exit(1);
    });
}

module.exports = { testPlaneWordsGame };